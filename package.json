{
  "name": "postfix-template-py",
  "displayName": "postfix-template-py",
  "description": "vscode postfix template py",
  "version": "0.0.28",
  "publisher": "cqh",
  "engines": {
    "vscode": "^1.32.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/chen19901225/postfix-template-py"
  },
  "bugs": {
    "url": "https://github.com/chen19901225/postfix-template-py/issues"
  },
  "categories": [
    "Other",
    "Snippets"
  ],
  "keywords": [
    "template",
    "postfix",
    "snippet",
    "python"
  ],
  "activationEvents": [
    "onLanguage:python",
    "onLanguage:jupyter",
    "onDebugResolve:python"
  ],
  "main": "./dist/extension",
  "contributes": {
    "configuration": {
      "title": "Postfix completion",
      "properties": {
        "postfix-py.languages": {
          "type": "array",
          "description": "A list of languages in which the completion will be available",
          "default": [
            "python"
          ]
        },
        "postfix-py.customTemplates": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "body"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the template. It will be used in auto-complete suggestions"
              },
              "description": {
                "type": "string",
                "description": "Description of the template. It will be used in auto-complete suggestions"
              },
              "body": {
                "type": "string",
                "description": "Body of the template. {{expr}} will be replaced with the expression before the cursor"
              },
              "when": {
                "type": "array",
                "description": "Context in which the template should be suggested",
                "items": {
                  "type": "string",
                  "enum": [
                    "identifier",
                    "expression",
                    "binary-expression",
                    "unary-expression",
                    "function-call"
                  ]
                }
              }
            }
          },
          "default": [
            {
              "name": "self",
              "body": "self.{{expr}} = {{expr}}",
              "description": "self",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "apply",
              "body": "{{expr}} = {{expr}}",
              "description": "apply",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "apply_self",
              "body": "{{expr}} = self.{{expr}}",
              "description": "apply self",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "class_name",
              "body": "{{expr}}.__class__.__name__",
              "description": "get object class name",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "def_apply_",
              "body": "{{expr}}={{expr}}",
              "description": "method apply",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "def_apply_empty",
              "body": "{{expr}}=\"\"",
              "description": "method apply empty string",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "none",
              "body": "{{expr}}, self.{{expr}} = self.{{expr}}, None",
              "description": "self value none",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "raise",
              "body": "raise {{expr}}",
              "description": "raise ",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "n",
              "body": "{{expr}} is None",
              "description": "is None",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "nn",
              "body": "{{expr}} is not None",
              "description": "is not None",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "str",
              "body": "str({{expr}})",
              "description": "double expr",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "len",
              "body": "len({{expr}})",
              "description": "double expr",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "apply_none",
              "body": "{{expr}} = None",
              "description": "apply none value",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "apply_true",
              "body": "{{expr}} = True",
              "description": "apply true value",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "apply_false",
              "body": "{{expr}} = False",
              "description": "apply false value",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "apply_dict",
              "body": "{{expr}} = {}",
              "description": "apply dict value",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "apply_empty",
              "body": "{{expr}} = \"\"",
              "description": "apply empty string",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "apply_list",
              "body": "{{expr}} = []",
              "description": "apply list",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "yield",
              "body": "yield {{expr}}",
              "description": "yield value",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "apply_yield",
              "body": "{{expr}} = yield {{expr}}",
              "description": "double expr",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "self_apply_none",
              "body": "self.{{expr}} = None",
              "description": "double expr",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "self_apply_true",
              "body": "self.{{expr}} = True",
              "description": "double expr",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "if",
              "body": "if {{expr}}",
              "description": "double expr",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "self_apply_false",
              "body": "self.{{expr}} = False",
              "description": "double expr",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "self_apply_emtpy",
              "body": "self.{{expr}} = \"\"",
              "description": "double expr",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "self_apply_dict",
              "body": "self.{{expr}} = {}",
              "description": "apply dict value",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "self_apply_list",
              "body": "self.{{expr}} = []",
              "description": "apply list value",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "ifn",
              "body": "if {{expr}} is None:",
              "description": "if is None",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "ifnn",
              "body": "if {{expr}} is not None",
              "description": "if is not None",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "not",
              "body": "not {{expr}}",
              "description": "not expr",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "def_apply_true",
              "body": "{{expr}}=True",
              "description": "method apply true",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "def_apply_false",
              "body": "{{expr}}=False",
              "description": "method apply false",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "def_apply_none",
              "body": "{{expr}}=None",
              "description": "method apply None",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "if_yield",
              "body": "if {{expr}} is not None:\n    yield {{expr}}",
              "description": "method apply None",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "if_return",
              "body": "if {{expr}} is not None:\n    return {{expr}}",
              "description": "method apply None",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            },
            {
              "name": "ifn_return",
              "body": "if {{expr}} is None:\n    return {{expr}}",
              "description": "method apply None",
              "when": [
                "identifier",
                "unary-expression",
                "binary-expression",
                "expression",
                "function-call"
              ]
            }
          ]
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "compile": "webpack --mode none",
    "watch": "webpack --mode none --watch",
    "test-compile": "tsc -p ./"
  },
  "devDependencies": {
    "@types/lodash": "^4.14.119",
    "@types/mocha": "^5.2.0",
    "@types/node": "^8.0.0",
    "decache": "^4.5.0",
    "istanbul": "^0.4.5",
    "mocha": "^5.2.0",
    "remap-istanbul": "^0.12.0",
    "ts-loader": "^5.3.3",
    "typescript": "^2.9.2",
    "vscode": "^1.1.36",
    "webpack": "^4.29.6",
    "webpack-cli": "^3.3.0"
  },
  "dependencies": {
    "glob": "^7.1.3",
    "lodash": "^4.17.11"
  }
}
